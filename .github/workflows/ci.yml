name: Continuous Integration

# This workflow runs on pushes and pull requests to the main branch.
on:
  push:
    branches: [ "jax" ]
  pull_request:
    branches: [ "jax" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    # This is the new caching step.
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        # The path to the pip cache directory.
        path: ${{ steps.pip-cache.outputs.dir }}
        # The key for the cache. It's based on the OS, Python version, and a
        # hash of your pyproject.toml. If the hash changes, a new cache is created.
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-pip-${{ hashFiles('**/pyproject.toml') }}
        # A fallback key to use if the exact key isn't found.
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # pip will automatically use the restored cache directory,
        # making this step very fast if the cache was hit.
        pip install -e ".[dev]"

    - name: Run CI checks
      run: |
        make ci

